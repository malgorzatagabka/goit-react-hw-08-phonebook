{"version":3,"file":"static/js/836.d581f0d2.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactsList/Contacts.module.css?3131","components/ContactsList/ContactsList.jsx","pages/Contacts.js","../node_modules/debounce/index.js","webpack://react-homework-template/./src/components/App.module.css?6c4d","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { nanoid } from 'nanoid';\nimport TextField from '@mui/material/TextField';\n\nimport React from 'react';\nimport { useGetContactsQuery, useAddContactMutation } from 'redux/auth/contactsApi';\n\nimport style from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const id = nanoid();\n\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const addNewContact = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.name.value;\n    const number = form.number.value;\n    const normalizedName = name.toLowerCase();\n    let nameOntheList = false;\n\n    const newContact = {\n      id: nanoid(),\n      name: name,\n      number: number,\n    };\n\n    data.forEach(contact => {\n      if (contact.name.toLowerCase() === normalizedName) {\n        alert(`${contact.name} is already in contacts`);\n        nameOntheList = true;\n      }\n    });\n\n    if (nameOntheList) return;\n\n    addContact(newContact);\n    form.reset();\n  };\n\n  return (\n    <form className={style.form} onSubmit={addNewContact}>\n      <label htmlFor={id} className={style.formText}></label>\n      \n      <TextField\n        className={style.formInput}\n        label=\"Name\"\n        id=\"demo-helper-text-misaligned\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label htmlFor={id} className={style.formText}></label>\n      <TextField\n        className={style.formInput}\n        label=\"Phone Number\"\n        id=\"demo-helper-text-misaligned\"\n        required\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n       \n      />\n      <button className={style.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import style from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/fiterSlice';\nimport debounce from 'debounce';\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = () => {\n    \n  const dispatch = useDispatch();\n\n  const onChange = debounce(e => {\n  const value = e.target.value.toLowerCase();\n\n  dispatch(setFilter(value));\n    \n  },1000);\n\n\n  return (\n    <label className={style.filterLabel}>\n      Find contact by name\n      <TextField className={style.filterInput}\n        type=\"name\"\n        label=\"Search\"\n        id=\"demo-helper-text-misaligned\"\n        onChange={onChange} />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"Contacts_contactsList__W3abH\",\"wrapper\":\"Contacts_wrapper__2usHk\",\"contactsItem\":\"Contacts_contactsItem__qepw2\",\"contactBtn\":\"Contacts_contactBtn__tIpPj\",\"contactsName\":\"Contacts_contactsName__-7HHl\",\"contactImage\":\"Contacts_contactImage__u5YWT\"};","import PropTypes from 'prop-types';\nimport style from './Contacts.module.css';\nimport { getFilterValue } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'redux/auth/contactsApi';\nimport Loader from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const { data, isLoading } = useGetContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filterValue = useSelector(getFilterValue);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (!data) {\n    return <div>No contacts</div>;\n  }\n\n  const contactsFilter = data.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  return (\n    <ul className={style.contactsList}>\n      {contactsFilter.map(({ id, name, number }) => (\n        <li key={id} className={style.contactsItem}>\n          <div className={style.wrapper}>\n            <span className={style.contactsName}>{`${name}`}</span>\n            <span className={style.contactsPhone}>{`${number}`}</span>\n\n            <button\n              type=\"button\"\n              className={style.contactBtn}\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactsList/ContactsList';\nimport style from '../components/App.module.css';\nimport { useGetContactsQuery } from '../redux/auth/contactsApi';\nimport Loader from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const { data: isLoggedIn, isLoading, isError, error } = useGetContactsQuery();\n\n  let content;\n\n  if (isLoading) {\n    content = <Loader />;\n  } else if (isLoggedIn) {\n    content = (\n      <div className={style.container}>\n        <h1>Phonebook</h1>\n        <div className={style.wrapper}>\n          <ContactForm />\n          <Filter />\n        </div>\n        <ContactList />\n      </div>\n    );\n  } else if (isError) {\n    content = <p>{JSON.stringify(error)}</p>;\n  }\n  return content;\n};\n\nexport default Contacts;\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__ZdBeZ\",\"wrapper\":\"App_wrapper__oLZUe\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formText\":\"ContactForm_formText__qGoZy\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","data","useGetContactsQuery","useAddContactMutation","addContact","className","style","onSubmit","e","preventDefault","form","currentTarget","name","value","number","normalizedName","toLowerCase","nameOntheList","newContact","forEach","contact","alert","reset","htmlFor","TextField","label","type","pattern","title","required","Filter","dispatch","useDispatch","onChange","debounce","target","setFilter","ContactList","isLoading","useDeleteContactMutation","deleteContact","filterValue","useSelector","getFilterValue","Loader","contactsFilter","filter","includes","map","onClick","content","isLoggedIn","isError","error","JSON","stringify","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","module","exports"],"sourceRoot":""}