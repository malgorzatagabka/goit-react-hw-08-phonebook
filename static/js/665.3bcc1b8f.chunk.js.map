{"version":3,"file":"static/js/665.3bcc1b8f.chunk.js","mappings":"yRAQaA,EAAe,WAC1B,OAAiBC,EAAAA,EAAAA,MAAVC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMC,GAAN,sFACbC,EAAOD,EAAIE,OAEAC,EAGbF,EAHFE,KAAQC,MACQC,EAEdJ,EAFFI,MAASD,MACUE,EACjBL,EADFK,SAAYF,MAGRG,EAAc,CAAEJ,KAAAA,EAAME,MAAAA,EAAOC,SAAAA,GAEnCN,EAAIQ,iBAVe,SAYbZ,EAAOW,GACVE,SACAC,MAAK,kBAAMb,EAAS,YAAf,IACLc,OAAM,WACLC,EAAAA,GAAAA,KAAW,8CAA+C,CAChEC,KAAM,eAAOC,MAAO,QAEf,IAnBgB,OAqBnBb,EAAKc,QArBc,2CAAH,sDAwBlB,OACE,kBAAMC,SAAUjB,EAAckB,aAAa,MAAMC,UAAWC,EAAAA,EAAAA,KAA5D,WACE,gBAAKD,UAAWC,EAAAA,EAAAA,SAAhB,6BACA,kBAAOD,UAAWC,EAAAA,EAAAA,SAAlB,UACE,SAACC,EAAA,EAAD,CACEC,MAAM,OACNC,GAAG,8BACHC,KAAK,OACLpB,KAAK,OACLqB,UAAQ,EACRN,UAAWC,EAAAA,EAAAA,UACXM,MAAM,iBAGV,kBAAOP,UAAWC,EAAAA,EAAAA,SAAlB,UACE,SAACC,EAAA,EAAD,CACEC,MAAM,QACNC,GAAG,iBACHC,KAAK,QACLpB,KAAK,QACLc,aAAa,MACbS,QAAQ,0CACRF,UAAQ,EACRN,UAAWC,EAAAA,EAAAA,UACXM,MAAM,iBAGV,kBAAOP,UAAWC,EAAAA,EAAAA,SAAlB,UACE,SAACC,EAAA,EAAD,CACEC,MAAM,WACNM,WAAW,2IAEXJ,KAAK,WACLG,QAAQ,yEACRvB,KAAK,WACLc,aAAa,MACbO,UAAQ,EACRN,UAAWC,EAAAA,EAAAA,UACXM,MAAM,iBAGV,mBAAQP,UAAWC,EAAAA,EAAAA,QAAeI,KAAK,SAAvC,wBAKL,E,UCrED,EAViB,WACf,OACE,gBAAKL,UAAWC,EAAAA,EAAAA,UAAhB,UACE,gBAAKD,UAAWC,EAAAA,EAAAA,QAAhB,UACE,SAACzB,EAAD,OAIP,C,qBCVD,KAAgB,UAAY,uBAAuB,QAAU,qBAAqB,KAAO,kB,qBCAzF,KAAgB,KAAO,0BAA0B,SAAW,8BAA8B,UAAY,+BAA+B,QAAU,6B,uBCD/I,SAASkC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB/B,EAAQgC,EAAKhC,KAInB,CAHE,MAAOiC,GAEP,YADAN,EAAOM,EAET,CACID,EAAKE,KACPR,EAAQ1B,GAERmC,QAAQT,QAAQ1B,GAAOM,KAAKsB,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAM5B,GACbwB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ7B,EAClE,CACA,SAAS6B,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js","webpack://react-homework-template/./src/components/App.module.css?6c4d","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useSignupMutation } from 'redux/auth/contactsApi';\nimport { useNavigate } from 'react-router-dom';\n\nimport style from '../ContactForm/ContactForm.module.css';\nimport TextField from '@mui/material/TextField';\nimport { toast } from 'react-toastify';\n\n\nexport const RegisterForm = () => {\n  const [signup] = useSignupMutation();\n  const navigate = useNavigate();\n \n  const handleSubmit = async evt => {\n    const form = evt.target;\n    const {\n      name: { value: name },\n      email: { value: email },\n      password: { value: password },\n    } = form;\n\n    const credentials = { name, email, password };\n\n    evt.preventDefault();\n\n    await signup(credentials)\n      .unwrap()\n      .then(() => navigate('/contacts'))\n      .catch(() => {\n        toast.warn('User with this email address already exists', {\n  icon: \"ðŸ¦„\",  theme: \"dark\"\n});\n      });\n\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\" className={style.form}>\n      <div className={style.formText}>Please Sign In</div>\n      <label className={style.formText}>\n        <TextField\n          label=\"Name\"\n          id=\"demo-helper-text-misaligned\"\n          type=\"text\"\n          name=\"name\"\n          required\n          className={style.formInput}\n          color=\"secondary\" \n        />\n      </label>\n      <label className={style.formText}>\n        <TextField\n          label=\"Email\"\n          id=\"outlined-basic\"\n          type=\"email\"\n          name=\"email\"\n          autoComplete=\"off\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n          required\n          className={style.formInput}\n          color=\"secondary\" \n        />\n      </label>\n      <label className={style.formText}>\n        <TextField\n          label=\"Password\"\n          helperText=\"Password should contain min. eight characters, at least one uppercase letter, one lowercase letter, one number and one special character\"\n          \n          type=\"password\"\n          pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\"\n          name=\"password\"\n          autoComplete=\"off\"\n          required\n          className={style.formInput}\n          color=\"secondary\" \n        />\n      </label>\n      <button className={style.formBtn} type=\"submit\">\n        Register\n      </button>\n    </form>\n  );\n};\n","import { RegisterForm } from '../components/RegisterForm/RegisterForm';\nimport style from '../components/App.module.css';\n\nconst Register = () => {\n  return (\n    <div className={style.container}>\n      <div className={style.wrapper}>\n        <RegisterForm />\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__ZdBeZ\",\"wrapper\":\"App_wrapper__oLZUe\",\"link\":\"App_link__91nmW\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formText\":\"ContactForm_formText__qGoZy\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["RegisterForm","useSignupMutation","signup","navigate","useNavigate","handleSubmit","evt","form","target","name","value","email","password","credentials","preventDefault","unwrap","then","catch","toast","icon","theme","reset","onSubmit","autoComplete","className","style","TextField","label","id","type","required","color","pattern","helperText","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}